[{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"elicitr Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"elicitr Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"elicitr Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"elicitr Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"elicitr Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement crewdecisions@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"elicitr Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"elicitr Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"elicitr Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"elicitr Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"elicitr Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"elicitr Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to elicitr","title":"Contributing to elicitr","text":"Thank taking time contribute project. Please, read Contributor Code Conduct help keep community friendly respectful review document filing issue opening PR.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contributing to elicitr","text":"question, please file issue GitHub use channels.","code":""},{"path":"https://crewdecisions.github.io/elicitr/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to elicitr","text":"Please, filing issue check whether already exists. reporting bug make sure latest version elicitr installed. important provide minimal reproducible example. example include code relevant problem, please remove lines code relevant .","code":""},{"path":"https://crewdecisions.github.io/elicitr/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull Requests","title":"Contributing to elicitr","text":"follow coding convention. Check code repository see style use refer tidyverse guidelines detailed description coding conventions. open PR important following steps can executed successfully (see R Packages book details): Start new R session Load devtools : Load package : Rebuild documentation : Rebuild README file : Run R CMD check: Run spell check: Lint package:","code":"library(devtools) load_all() document() build_readme() check() spell_check() lintr::lint_package()"},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://crewdecisions.github.io/elicitr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://crewdecisions.github.io/elicitr/PULL_REQUEST_TEMPLATE.html","id":"proposed-changes","dir":"","previous_headings":"","what":"Proposed changes","title":"NA","text":"types changes code introduce? (Put x boxes apply) Bugfix New feature Documentation update Please explain changes ’ve made . help maintainers see accept pull request. Please, yet exist, create issue sure link PR issue.","code":""},{"path":"https://crewdecisions.github.io/elicitr/PULL_REQUEST_TEMPLATE.html","id":"checklist","dir":"","previous_headings":"","what":"Checklist","title":"NA","text":"first three required (can also fill creating PR). read contributing guidelines steps described contributing guidelines can executed successfully linked PR corresponding issue, see link pull request issue added tests prove fix valid feature works (appropriate) added necessary documentation (appropriate) 💔 Thank !","code":""},{"path":"https://crewdecisions.github.io/elicitr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sergio Vignali. Author, maintainer. Maude Vernet. Author. Stefano Canessa. Author. University Bern. Funder.","code":""},{"path":"https://crewdecisions.github.io/elicitr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vignali S, Vernet M, Canessa S (2024). elicitr: user friendly interface aggregate elicitation data. R package version 0.0.0.9000, https://crewdecisions.github.io/elicitr/.","code":"@Manual{,   title = {elicitr: A user friendly interface to aggregate elicitation data},   author = {Sergio Vignali and Maude Vernet and Stefano Canessa},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://crewdecisions.github.io/elicitr/}, }"},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"A user friendly interface to aggregate elicitation data","text":"elicitr R package used standardise, visualise aggregate data expert elicitation. package active development implement functions based two formal elicitation methods: Elicitation continuous variables Adapted Hemming, V. et al. (2018). practical guide structured expert elicitation using IDEA protocol. Methods Ecology Evolution, 9(1), 169–180. https://doi.org/10.1111/2041-210X.12857 Elicitation categorical data Adapted Vernet, M. et al. (2024). Assessing invasion risks using EICAT-based expert elicitation: application conservation translocation. Biological Invasions, 26(8), 2707–2721. https://doi.org/10.1007/s10530-024-03341-2","code":""},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A user friendly interface to aggregate elicitation data","text":"can install development version elicitr GitHub :","code":"# install.packages(\"pak\") pak::pak(\"CREWdecisions/elicitr\")"},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"A user friendly interface to aggregate elicitation data","text":"functions elicitr package start two prefixes: cont cat. design choice intended enhance functions discovery.cont functions used elicitation continuous variables cat functions elicitation categorical variables.","code":"library(elicitr)"},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"how-elicitr-works","dir":"","previous_headings":"Getting started","what":"How elicitr works","title":"A user friendly interface to aggregate elicitation data","text":"Just like create form collect estimates elicitation process, core elicitr creation object store metadata information. allows check whether experts given answers expected way. analysis starts creating object start function. , data can added retrieved using add_data get_data functions respectively. Finally data can plotted using plot function. Details implementation example usages functions based simulated datasets included elicitr can seen bellow. total, five simulated datasets provided package. intended demonstrate functionality package represent actual elicitation process (names also randomly generated).","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"simulated-datasets","dir":"","previous_headings":"Elicitation of continuous variables","what":"Simulated datasets","title":"A user friendly interface to aggregate elicitation data","text":"Two datasets simulate elicitation continuous variables included elicitr:","code":"round_1 #> # A tibble: 6 × 9 #>   name         var1_best var2_min var2_max var2_best var3_min var3_max var3_best #>   <chr>            <int>    <int>    <int>     <int>    <dbl>    <dbl>     <dbl> #> 1 Derek Macle…         1       20       24        22     0.43     0.83      0.73 #> 2 Christopher…         0        7       10         9     0.67     0.87      0.77 #> 3 Mar'Quasa B…         0       10       15        12     0.65     0.95      0.85 #> 4 Mastoora al…        -7        4       12         9     0.44     0.84      0.64 #> 5 Eriberto Mu…        -5       13       18        16     0.38     0.88      0.68 #> 6 Paul Bol             3       20       26        25     0.35     0.85      0.65 #> # ℹ 1 more variable: var3_conf <int> round_2 #> # A tibble: 6 × 9 #>   name         var1_best var2_min var2_max var2_best var3_min var3_max var3_best #>   <chr>            <int>    <int>    <int>     <int>    <dbl>    <dbl>     <dbl> #> 1 Mar'Quasa B…        -2       15       21        18     0.62     0.82      0.72 #> 2 Mastoora al…        -4       11       15        12     0.52     0.82      0.72 #> 3 Eriberto Mu…         1       15       20        17     0.58     0.78      0.68 #> 4 Derek Macle…         0       11       18        15     0.52     0.82      0.72 #> 5 Christopher…        -2       14       18        15     0.55     0.85      0.75 #> 6 Paul Bol             1       18       23        20     0.66     0.86      0.76 #> # ℹ 1 more variable: var3_conf <int>"},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"functions","dir":"","previous_headings":"Elicitation of continuous variables","what":"Functions","title":"A user friendly interface to aggregate elicitation data","text":"analysis continuous variables starts creating elic_cont object function cont_start() store metadata elicitation. build elic_cont object, four parameters must specified: var number variables (.e. number topics elicitation) var_types type variables variables (many options available, ranging real numbers probabilities) elic_types type elicitation variables (three options available: one, three, four points elicitations) experts number experts replied elicitation metadata added elic_cont object, data first round elicitation can added function cont_add_data(): information message confirms data first round added elic_cont object data.frame. Besides data frames, elicitr also allows users add data .csv .xlsx files, Google Sheets. conducted second round elicitation, can added elic_cont object first round added: keep anonymity experts, names converted short sha1 hashes saved id column. used match expert’s answers two rounds. function cont_get_data() retrieves data elic_cont object. possible get whole dataset given round, extract data given variable, variable type, elicitation type: Finally, data can plotted using function cont_plot(). function plots data belonging given round given variable.  Variable 3 (plotted variable) result four points elicitation, minimum maximum estimates, best guess, expert confidence provided. plot, best guess represented dot, range minimum maximum estimates represented line. Expert estimates represented purple, group’s mean represented orange. message printed function ran informs users minimum maximum value given experts rescaled using provided confidence level.","code":"my_elicitation_cont <- cont_start(var = c(\"var1\", \"var2\", \"var3\"),                                   var_types = \"ZNp\",                                   elic_types = \"134\",                                   experts = 6,                                   title = \"Continuous elicitation example\") #> ✔ <elic_cont> object for \"Continuous elicitation example\" correctly initialised my_elicitation_cont #>  #> ── Continuous elicitation example ── #>  #> • Variables: \"var1\", \"var2\", and \"var3\" #> • Variable types: \"Z\", \"N\", and \"p\" #> • Elicitation types: \"1p\", \"3p\", and \"4p\" #> • Number of experts: 6 #> • Number of rounds: 0 my_elicitation_cont <- cont_add_data(my_elicitation_cont,                                      data_source = round_1,                                      round = 1) #> ✔ Data added to \"Round 1\" from \"data.frame\" my_elicitation_cont <- cont_add_data(my_elicitation_cont,                                      data_source = round_2,                                      round = 2) #> ✔ Data added to \"Round 2\" from \"data.frame\" cont_get_data(my_elicitation_cont,               round = 1,               var = \"all\") #> # A tibble: 6 × 9 #>   id      var1_best var2_min var2_max var2_best var3_min var3_max var3_best #>   <chr>       <int>    <int>    <int>     <int>    <dbl>    <dbl>     <dbl> #> 1 5ac97e0         1       20       24        22     0.43     0.83      0.73 #> 2 e51202e         0        7       10         9     0.67     0.87      0.77 #> 3 e78cbf4         0       10       15        12     0.65     0.95      0.85 #> 4 9fafbee        -7        4       12         9     0.44     0.84      0.64 #> 5 3cc9c29        -5       13       18        16     0.38     0.88      0.68 #> 6 3d32ab9         3       20       26        25     0.35     0.85      0.65 #> # ℹ 1 more variable: var3_conf <int> cont_plot(my_elicitation_cont,           round = 2,           group = TRUE,           var = \"var3\",           xlab = \"Variable 3\") #> ✔ Rescaled min and max"},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"simulated-datasets-1","dir":"","previous_headings":"Elicitation of categorical variables","what":"Simulated datasets","title":"A user friendly interface to aggregate elicitation data","text":"Three datasets simulate elicitation categorical variables included elicitr:","code":"topic_1 #> # A tibble: 120 × 5 #>    name            category   option   confidence estimate #>    <chr>           <chr>      <chr>         <dbl>    <dbl> #>  1 Derek Maclellan category_1 option_1         15     0.08 #>  2 Derek Maclellan category_2 option_1         15     0    #>  3 Derek Maclellan category_3 option_1         15     0.85 #>  4 Derek Maclellan category_4 option_1         15     0.02 #>  5 Derek Maclellan category_5 option_1         15     0.05 #>  6 Derek Maclellan category_1 option_2         35     0.02 #>  7 Derek Maclellan category_2 option_2         35     0.11 #>  8 Derek Maclellan category_3 option_2         35     0.18 #>  9 Derek Maclellan category_4 option_2         35     0.02 #> 10 Derek Maclellan category_5 option_2         35     0.67 #> # ℹ 110 more rows topic_2 #> # A tibble: 100 × 5 #>    name              category   option   confidence estimate #>    <chr>             <chr>      <chr>         <dbl>    <dbl> #>  1 Christopher Felix category_1 option_1        100     0.09 #>  2 Christopher Felix category_2 option_1        100     0.21 #>  3 Christopher Felix category_3 option_1        100     0.11 #>  4 Christopher Felix category_4 option_1        100     0.59 #>  5 Christopher Felix category_5 option_1        100     0    #>  6 Christopher Felix category_1 option_2         20     0.09 #>  7 Christopher Felix category_2 option_2         20     0.05 #>  8 Christopher Felix category_3 option_2         20     0.33 #>  9 Christopher Felix category_4 option_2         20     0.24 #> 10 Christopher Felix category_5 option_2         20     0.29 #> # ℹ 90 more rows topic_3 #> # A tibble: 90 × 5 #>    name            category   option   confidence estimate #>    <chr>           <chr>      <chr>         <dbl>    <dbl> #>  1 Derek Maclellan category_1 option_1         80     0.02 #>  2 Derek Maclellan category_2 option_1         80     0.02 #>  3 Derek Maclellan category_3 option_1         80     0.01 #>  4 Derek Maclellan category_4 option_1         80     0.87 #>  5 Derek Maclellan category_5 option_1         80     0.08 #>  6 Derek Maclellan category_1 option_2         50     0.11 #>  7 Derek Maclellan category_2 option_2         50     0.09 #>  8 Derek Maclellan category_3 option_2         50     0.17 #>  9 Derek Maclellan category_4 option_2         50     0.09 #> 10 Derek Maclellan category_5 option_2         50     0.54 #> # ℹ 80 more rows"},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"functions-1","dir":"","previous_headings":"Elicitation of categorical variables","what":"Functions","title":"A user friendly interface to aggregate elicitation data","text":"Just like continuous variables, analysis categorical variables starts creating elic_cat object function cat_start() store metadata elicitation. build elic_cat object, four parameters must specified: categories names categories used elicitation options names options investigated experts maximum number experts participating elicitation process one topic topics names topics investigated","code":"my_elicitation_cat <- cat_start(categories = c(\"category_1\", \"category_2\", \"category_3\", \"category_4\", \"category_5\"),                                 options = c(\"option_1\", \"option_2\", \"option_3\", \"option_4\"),                                 experts = 6,                                 topics = c(\"topic_1\",\"topic_2\", \"topic_3\"),                                 title = \"Categorical elicitation example\") #> ✔ <elic_cat> object for \"Categorical elicitation example\" correctly initialised my_elicitation_cat #>  #> ── Categorical elicitation example ── #>  #> • Categories: \"category_1\", \"category_2\", \"category_3\", \"category_4\", and #> \"category_5\" #> • Options: \"option_1\", \"option_2\", \"option_3\", and \"option_4\" #> • Number of experts: 6 #> • Topics: \"topic_1\", \"topic_2\", and \"topic_3\" #> • Data available for 0 topics"},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"functions-under-development","dir":"","previous_headings":"Elicitation of categorical variables","what":"Functions under development","title":"A user friendly interface to aggregate elicitation data","text":"cat_add_data() cat_get_data() elic_cat_plot_data","code":""},{"path":"https://crewdecisions.github.io/elicitr/index.html","id":"similar-packages","dir":"","previous_headings":"","what":"Similar packages","title":"A user friendly interface to aggregate elicitation data","text":"{shelf} : Oakley, J. (2024). Package “SHELF” Tools Support Sheffield Elicitation Framework. https://doi.org/10.32614/CRAN.package.SHELF {prefR} : Lepird, J. (2022). Package “prefeR” R Package Pairwise Preference Elicitation. https://doi.org/10.32614/CRAN.package.prefeR","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_add_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data — cat_add_data","title":"Add data — cat_add_data","text":"cat_add_data() adds data elic_cat object different sources.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_add_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data — cat_add_data","text":"","code":"cat_add_data(   x,   data_source,   topic,   ...,   sep = \",\",   sheet = 1,   overwrite = FALSE,   verbose = TRUE )"},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_add_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data — cat_add_data","text":"x object class elic_cat. data_source either data.frame tibble, string path csv xlsx file, anything accepted read_sheet function. topic character string indicates machanism data belongs. ... Unused arguments, included future extensions function. sep character used field separator, used data_source path csv file. sheet integer character select sheet. sheet can referenced position number name string. Used data_source path xlsx file data imported Google Sheets. overwrite logical, whether overwrite existing data already added elic_cont object. verbose logical, TRUE prints informative messages.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_add_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add data — cat_add_data","text":"provided object class elic_cat updated data.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_add_data.html","id":"data-format","dir":"Reference","previous_headings":"","what":"Data format","title":"Add data — cat_add_data","text":"topic, data expected five columns, built follows: first column data hold names experts. name expert repeated many times number categories options. (.e. expert appear \\(number\\ \\ categories \\cdot number\\ \\ options\\) times). second column names categories considered elicitation. block categories repeated many times number options considered. third column hold names options considered study. name option repeated many times number categories considered. fourth column experts confidence estimates (given percent). Experts estimate confident estimates block categories option. Therefore, expert confidence estimates repeated many times number categories impact considered. final column estimates expert option category. name columns important, cat_add_data() overwrite according following convention: first column renamed id, second column category, third column option, fourth column confidence, fifth column estimate. example data correctly formatted elicitation five categories two options (one expert shown):","code":"name         category       option      confidence      estimate ---------------------------------------------------------------- expert 1     category 1     option 1            15          0.08 expert 1     category 2     option 1            15          0 expert 1     category 3     option 1            15          0.84 expert 1     category 4     option 1            15          0.02 expert 1     category 5     option 1            15          0.06 expert 1     category 1     option 2            35          0.02 expert 1     category 2     option 2            35          0.11 expert 1     category 3     option 2            35          0.19 expert 1     category 4     option 2            35          0.02 expert 1     category 5     option 2            35          0.66"},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_add_data.html","id":"data-cleaning","dir":"Reference","previous_headings":"","what":"Data cleaning","title":"Add data — cat_add_data","text":"data added elic_cat object, first names standardised converting capital letters lower case, removing whitespaces punctuation. , data anonymised converting names short sha1 hashes. way, sensible information collected elicitation process never reaches elic_cat object.","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_add_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add data — cat_add_data","text":"Sergio Vignali Maude Vernet","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_add_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add data — cat_add_data","text":"","code":"# Create the elic_cat object for an elicitation process with three topics, # four options, five categories and a maximum of six experts per topic my_categories <- c(\"category_1\", \"category_2\", \"category_3\",                    \"category_4\", \"category_5\") my_options <- c(\"option_1\", \"option_2\", \"option_3\", \"option_4\") my_topics <- c(\"topic_1\", \"topic_2\", \"topic_3\") x <- cat_start(categories = my_categories,                options = my_options,                experts = 6,                topics = my_topics) #> ✔ <elic_cat> object for \"Elicitation\" correctly initialised  # Add data for the three topics from a data.frame. Notice that the three # commands can be piped my_elicit <- cat_add_data(x,                           data_source = topic_1,                           topic = \"topic_1\") |>   cat_add_data(data_source = topic_2, topic = \"topic_2\") |>   cat_add_data(data_source = topic_3, topic = \"topic_3\") #> ✔ Data added to Topic \"topic_1\" from \"data.frame\" #> ✔ Data added to Topic \"topic_2\" from \"data.frame\" #> ✔ Data added to Topic \"topic_3\" from \"data.frame\" my_elicit #>  #> ── Elicitation ── #>  #> • Categories: \"category_1\", \"category_2\", \"category_3\", \"category_4\", and #> \"category_5\" #> • Options: \"option_1\", \"option_2\", \"option_3\", and \"option_4\" #> • Number of experts: 6 #> • Topics: \"topic_1\", \"topic_2\", and \"topic_3\" #> • Data available for topics \"topic_1\", \"topic_2\", and \"topic_3\"  # Add data for the first and second round from a csv file files <- list.files(path = system.file(\"extdata\", package = \"elicitr\"),                     pattern = \"topic_\",                     full.names = TRUE) my_elicit <- cat_add_data(x,                           data_source = files[1],                           topic = \"topic_1\") |>   cat_add_data(data_source = files[2], topic = \"topic_2\") |>   cat_add_data(data_source = files[3], topic = \"topic_3\") #> ✔ Data added to Topic \"topic_1\" from \"csv file\" #> ✔ Data added to Topic \"topic_2\" from \"csv file\" #> ✔ Data added to Topic \"topic_3\" from \"csv file\" my_elicit #>  #> ── Elicitation ── #>  #> • Categories: \"category_1\", \"category_2\", \"category_3\", \"category_4\", and #> \"category_5\" #> • Options: \"option_1\", \"option_2\", \"option_3\", and \"option_4\" #> • Number of experts: 6 #> • Topics: \"topic_1\", \"topic_2\", and \"topic_3\" #> • Data available for topics \"topic_1\", \"topic_2\", and \"topic_3\"  # Add data for the first and second round from a xlsx file with three sheets file <- list.files(path = system.file(\"extdata\", package = \"elicitr\"),                    pattern = \"topics\",                    full.names = TRUE) # Using the sheet index my_elicit <- cat_add_data(x,                           data_source = file,                           sheet = 1,                           topic = \"topic_1\") |>   cat_add_data(data_source = file,                sheet = 2,                topic = \"topic_2\") |>   cat_add_data(data_source = file,                sheet = 3,                topic = \"topic_3\") #> ✔ Data added to Topic \"topic_1\" from \"xlsx file\" #> ✔ Data added to Topic \"topic_2\" from \"xlsx file\" #> ✔ Data added to Topic \"topic_3\" from \"xlsx file\" my_elicit #>  #> ── Elicitation ── #>  #> • Categories: \"category_1\", \"category_2\", \"category_3\", \"category_4\", and #> \"category_5\" #> • Options: \"option_1\", \"option_2\", \"option_3\", and \"option_4\" #> • Number of experts: 6 #> • Topics: \"topic_1\", \"topic_2\", and \"topic_3\" #> • Data available for topics \"topic_1\", \"topic_2\", and \"topic_3\" # Using the sheet name my_elicit <- cat_add_data(x,                           data_source = file,                           sheet = \"Topic 1\",                           topic = \"topic_1\") |>   cat_add_data(data_source = file,                sheet = \"Topic 2\",                topic = \"topic_2\") |>   cat_add_data(data_source = file,                sheet = \"Topic 3\",                topic = \"topic_3\") #> ✔ Data added to Topic \"topic_1\" from \"xlsx file\" #> ✔ Data added to Topic \"topic_2\" from \"xlsx file\" #> ✔ Data added to Topic \"topic_3\" from \"xlsx file\" my_elicit #>  #> ── Elicitation ── #>  #> • Categories: \"category_1\", \"category_2\", \"category_3\", \"category_4\", and #> \"category_5\" #> • Options: \"option_1\", \"option_2\", \"option_3\", and \"option_4\" #> • Number of experts: 6 #> • Topics: \"topic_1\", \"topic_2\", and \"topic_3\" #> • Data available for topics \"topic_1\", \"topic_2\", and \"topic_3\"  if (FALSE) { # interactive() # Add data for the first and second round from Google Sheets googlesheets4::gs4_deauth() gs <- \"18VHeHB89P1s-6banaVoqOP-ggFmQZYx-z_31nMffAb8\" # Using the sheet index my_elicit <- cat_add_data(x,                           data_source = gs,                           sheet = 1,                           topic = \"topic_1\") |>   cat_add_data(data_source = gs,                sheet = 2,                topic = \"topic_2\") |>   cat_add_data(data_source = gs,                sheet = 3,                topic = \"topic_3\") my_elicit # Using the sheet name my_elicit <- cat_add_data(x, data_source = gs,                           sheet = \"Topic 1\",                           topic = \"topic_1\") |>   cat_add_data(data_source = gs,                sheet = \"Topic 2\",                topic = \"topic_2\") |>   cat_add_data(data_source = gs,                sheet = \"Topic 3\",                topic = \"topic_3\") my_elicit }"},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Elicitation data for categorical variables — cat_data","title":"Elicitation data for categorical variables — cat_data","text":"Simulated data three topics investigated elicitation process.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elicitation data for categorical variables — cat_data","text":"","code":"topic_1  topic_2  topic_3"},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Elicitation data for categorical variables — cat_data","text":"data frame : expert Name experts (randomly generated). category name categories. 5 different categories per option. option name options. Topic 1 2 4 options, topic 3 3 options. confidence confidence experts given percentages. One confidence value given option. estimate Expert estimates given probabilities. object class tbl_df (inherits tbl, data.frame) 120 rows 5 columns. object class tbl_df (inherits tbl, data.frame) 100 rows 5 columns. object class tbl_df (inherits tbl, data.frame) 90 rows 5 columns.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Elicitation data for categorical variables — cat_data","text":"Randomly generated numbers names.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"#' Get data — cat_get_data","title":"#' Get data — cat_get_data","text":"Get data elic_cat object.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' Get data — cat_get_data","text":"","code":"cat_get_data(x, topic, ..., option = \"all\")"},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"#' Get data — cat_get_data","text":"x object class elic_cat. topic character string indicates machanism data belongs. ... Unused arguments, included future extensions function. option character string name option character vector options want extract data. Use options.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"#' Get data — cat_get_data","text":"tibble extracted data.","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_get_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"#' Get data — cat_get_data","text":"Sergio Vignali","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"#' Get data — cat_get_data","text":"","code":"# Create the elic_cat object for an elicitation process with three topics, # four options, five categories and a maximum of six experts per topic my_categories <- c(\"category_1\", \"category_2\", \"category_3\",                    \"category_4\", \"category_5\") my_options <- c(\"option_1\", \"option_2\", \"option_3\", \"option_4\") my_topics <- c(\"topic_1\", \"topic_2\", \"topic_3\") my_elicit <- cat_start(categories = my_categories,                        options = my_options,                        experts = 6,                        topics = my_topics) |>   cat_add_data(data_source = topic_1, topic = \"topic_1\") |>   cat_add_data(data_source = topic_2, topic = \"topic_2\") |>   cat_add_data(data_source = topic_3, topic = \"topic_3\") #> ✔ <elic_cat> object for \"Elicitation\" correctly initialised #> ✔ Data added to Topic \"topic_1\" from \"data.frame\" #> ✔ Data added to Topic \"topic_2\" from \"data.frame\" #> ✔ Data added to Topic \"topic_3\" from \"data.frame\"  # Get all data from Topic 1 cat_get_data(my_elicit, topic = \"topic_1\") #> # A tibble: 120 × 5 #>    id      category   option   confidence estimate #>    <chr>   <chr>      <chr>         <dbl>    <dbl> #>  1 5ac97e0 category_1 option_1         15     0.08 #>  2 5ac97e0 category_2 option_1         15     0    #>  3 5ac97e0 category_3 option_1         15     0.85 #>  4 5ac97e0 category_4 option_1         15     0.02 #>  5 5ac97e0 category_5 option_1         15     0.05 #>  6 5ac97e0 category_1 option_2         35     0.02 #>  7 5ac97e0 category_2 option_2         35     0.11 #>  8 5ac97e0 category_3 option_2         35     0.18 #>  9 5ac97e0 category_4 option_2         35     0.02 #> 10 5ac97e0 category_5 option_2         35     0.67 #> # ℹ 110 more rows  # Get data by option name---- # Get data for option_1 from Topic 2 cat_get_data(my_elicit, topic = \"topic_2\", option = \"option_1\") #> # A tibble: 25 × 5 #>    id      category   option   confidence estimate #>    <chr>   <chr>      <chr>         <dbl>    <dbl> #>  1 e51202e category_1 option_1        100     0.09 #>  2 e51202e category_2 option_1        100     0.21 #>  3 e51202e category_3 option_1        100     0.11 #>  4 e51202e category_4 option_1        100     0.59 #>  5 e51202e category_5 option_1        100     0    #>  6 e78cbf4 category_1 option_1         75     0.31 #>  7 e78cbf4 category_2 option_1         75     0.27 #>  8 e78cbf4 category_3 option_1         75     0.09 #>  9 e78cbf4 category_4 option_1         75     0.17 #> 10 e78cbf4 category_5 option_1         75     0.16 #> # ℹ 15 more rows  # Get data for option_1 and option_3 from Topic 3 cat_get_data(my_elicit,              topic = \"topic_3\",              option = c(\"option_1\", \"option_3\")) #> # A tibble: 60 × 5 #>    id      category   option   confidence estimate #>    <chr>   <chr>      <chr>         <dbl>    <dbl> #>  1 5ac97e0 category_1 option_1         80     0.02 #>  2 5ac97e0 category_2 option_1         80     0.02 #>  3 5ac97e0 category_3 option_1         80     0.01 #>  4 5ac97e0 category_4 option_1         80     0.87 #>  5 5ac97e0 category_5 option_1         80     0.08 #>  6 5ac97e0 category_1 option_3         15     0.59 #>  7 5ac97e0 category_2 option_3         15     0.08 #>  8 5ac97e0 category_3 option_3         15     0.11 #>  9 5ac97e0 category_4 option_3         15     0    #> 10 5ac97e0 category_5 option_3         15     0.22 #> # ℹ 50 more rows"},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample categorical data — cat_sample_data","title":"Sample categorical data — cat_sample_data","text":"cat_sample_data() samples data based expert estimates stored elic_cat object.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample categorical data — cat_sample_data","text":"","code":"cat_sample_data(   x,   method,   topic,   ...,   n_votes = 100,   option = \"all\",   verbose = TRUE )"},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_sample_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample categorical data — cat_sample_data","text":"x object class elic_cat. method character string name method sample data. available methods : basic bootstrap, see Methods . topic character string indicates machanism data belongs. ... Unused arguments, included future extensions function. n_votes numeric indicating number votes consider, used basic aggregation method. option character string name option character vector options want extract data. Use options. verbose logical, TRUE prints informative messages.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_sample_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample categorical data — cat_sample_data","text":"tibble sampled data. object additional class cat_sample used implement plotting method.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_sample_data.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Sample categorical data — cat_sample_data","text":"Two methods implemented. methods explained Vernet et al. (2024), see references . basic: method samples data based expert estimates without accounting confidence. Values sampled Dirichlet distribution using expert estimates parameters. one estimate provided, .e. 100 % one category, method assigns 100 % votes category. bootstrap: method samples data based expert estimates accounting confidence. confidence used weight number votes assigned expert. method samples data Dirichlet distribution using expert estimates parameters. one estimate provided, .e. 100 % one category, method assigns 100 % votes category.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_sample_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample categorical data — cat_sample_data","text":"Vernet, M., Trask, .E., Andrews, C.E., Ewen, J.E., Medina, S., Moehrenschlager, . & Canessa, S. (2024) Assessing invasion risks using EICAT‐based expert elicitation: application conservation translocation. Biological Invasions, 26(8), 2707–2721. https://doi.org/10.1007/s10530-024-03341-2","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_sample_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample categorical data — cat_sample_data","text":"Sergio Vignali Maude Vernet","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_sample_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample categorical data — cat_sample_data","text":"","code":"# Create the elic_cat object for an elicitation process with three topics, # four options, five categories and a maximum of six experts per topic my_categories <- c(\"category_1\", \"category_2\", \"category_3\",                    \"category_4\", \"category_5\") my_options <- c(\"option_1\", \"option_2\", \"option_3\", \"option_4\") my_topics <- c(\"topic_1\", \"topic_2\", \"topic_3\") my_elicit <- cat_start(categories = my_categories,                        options = my_options,                        experts = 6,                        topics = my_topics) |>   cat_add_data(data_source = topic_1, topic = \"topic_1\") |>   cat_add_data(data_source = topic_2, topic = \"topic_2\") |>   cat_add_data(data_source = topic_3, topic = \"topic_3\") #> ✔ <elic_cat> object for \"Elicitation\" correctly initialised #> ✔ Data added to Topic \"topic_1\" from \"data.frame\" #> ✔ Data added to Topic \"topic_2\" from \"data.frame\" #> ✔ Data added to Topic \"topic_3\" from \"data.frame\"  # Sample data from Topic 1 for all options using the basic method samp <- cat_sample_data(my_elicit,                         method = \"basic\",                         topic = \"topic_1\") #> ✔ Data sampled successfully using \"basic\" method.  # Sample data from Topic 2 for option 1 and 3 using the bootstrap method samp <- cat_sample_data(my_elicit,                         method = \"bootstrap\",                         topic = \"topic_2\",                         option = c(\"option_1\", \"option_3\")) #> ✔ Data sampled successfully using \"bootstrap\" method."},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Start elicitation — cat_start","title":"Start elicitation — cat_start","text":"cat_start() initialises elic_cat object stores important metadata data collected elicitation process categorical data.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start elicitation — cat_start","text":"","code":"cat_start(   categories,   options,   experts,   topics,   ...,   title = \"Elicitation\",   verbose = TRUE )"},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start elicitation — cat_start","text":"categories character vector names categories. See Categories . options character vector names options investigated. See Options . experts numeric, indicating maximum number experts participating elicitation process one topic. See Experts . topics character vector names topics. ... Unused arguments, included future extensions function. title character, used bind name object. verbose logical, TRUE prints informative messages.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start elicitation — cat_start","text":"object class elic_cat binding metadata related elicitation process. metadata used functions validate correctness provided data.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"categories","dir":"Reference","previous_headings":"","what":"Categories","title":"Start elicitation — cat_start","text":"Categories inherited topics. minimum two categories needed. one category investigated, please refer functions elicitation continuous data (e.g. cont_start).","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Start elicitation — cat_start","text":"option parameter character vector containing names options investigated elicitation. However, options investigated every topic.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"experts","dir":"Reference","previous_headings":"","what":"Experts","title":"Start elicitation — cat_start","text":"expert parameter number indicating maximum number experts taking part elicitation one investigated topics. number IDs experts can differ topics.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Start elicitation — cat_start","text":"Hemming, V., Burgman, M. ., Hanea, . M., McBride, M. F., & Wintle, B. C. (2018). practical guide structured expert elicitation using IDEA protocol. Methods Ecology Evolution, 9(1), 169–180. https://doi.org/10.1111/2041-210X.12857 Vernet, M., Trask, .E., Andrews, C.E., Ewen, J.E., Medina, S., Moehrenschlager, . & Canessa, S. (2024) Assessing invasion risks using EICAT‐based expert elicitation: application conservation translocation. Biological Invasions, 26(8), 2707–2721. https://doi.org/10.1007/s10530-024-03341-2","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Start elicitation — cat_start","text":"Sergio Vignali Maude Vernet","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cat_start.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start elicitation — cat_start","text":"","code":"# Create the elic_cat object for an elicitation process over 2 topics, 3 # options, 3 categories per options, and a maximum number of 8 experts per # topic my_categories <- c(\"category_1\", \"category_2\", \"category_3\") my_elicit <- cat_start(categories = my_categories,                        options = c(\"option_1\", \"option_2\", \"option_3\"),                        experts = 8,                        topics = c(\"topic_1\",\"topic_2\")) #> ✔ <elic_cat> object for \"Elicitation\" correctly initialised my_elicit #>  #> ── Elicitation ── #>  #> • Categories: \"category_1\", \"category_2\", and \"category_3\" #> • Options: \"option_1\", \"option_2\", and \"option_3\" #> • Number of experts: 8 #> • Topics: \"topic_1\" and \"topic_2\" #> • Data available for 0 topics  # A title can be added to bind a name to the object: my_elicit <- cat_start(categories = my_categories,                        options = c(\"option_1\", \"option_2\", \"option_3\"),                        experts = 8,                        topics = c(\"topic_1\",\"topic_2\"),                        title = \"My elicitation\") #> ✔ <elic_cat> object for \"My elicitation\" correctly initialised my_elicit #>  #> ── My elicitation ── #>  #> • Categories: \"category_1\", \"category_2\", and \"category_3\" #> • Options: \"option_1\", \"option_2\", and \"option_3\" #> • Number of experts: 8 #> • Topics: \"topic_1\" and \"topic_2\" #> • Data available for 0 topics"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_add_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data — cont_add_data","title":"Add data — cont_add_data","text":"cont_add_data() adds data elic_cont object different sources.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_add_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data — cont_add_data","text":"","code":"cont_add_data(   x,   data_source,   round,   ...,   sep = \",\",   sheet = 1,   overwrite = FALSE,   verbose = TRUE )"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_add_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data — cont_add_data","text":"x object class elic_cont. data_source either data.frame tibble, string path csv xlsx file, anything accepted read_sheet function. round integer indicating data belongs first second elicitation round. ... Unused arguments, included future extensions function. sep character used field separator, used data_source path csv file. sheet integer character select sheet. sheet can referenced position number name string. Used data_source path xlsx file data imported Google Sheets. overwrite logical, whether overwrite existing data already added elic_cont object. verbose logical, TRUE prints informative messages.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_add_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add data — cont_add_data","text":"provided object class elic_cont updated data.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_add_data.html","id":"data-format","dir":"Reference","previous_headings":"","what":"Data format","title":"Add data — cont_add_data","text":"Data expected name expert always first column. exception data coming Google Sheet can additional column timestamp. column automatically removed data added elic_cont object (see \"Data cleaning\"). name one blocks follow specifications : One point elicitation: var_best: best estimate variable Three points elicitation: var_min: minimum estimate variable var_max: maximum estimate variable var_best: best estimate variable Four points elicitation: var_min: minimum estimate variable var_max: maximum estimate variable var_best: best estimate variable var_conf: confidence estimate column names unique, columns block can repeated variable. Moreover, name columns important, cont_add_data() overwrite according following convention: varname_suffix suffix one min, max, best, conf. information build column names taken metadata available elic_cont object. var_conf, given percents, can number 60 100. value 50 imply accuracy estimates due chance).","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_add_data.html","id":"data-cleaning","dir":"Reference","previous_headings":"","what":"Data cleaning","title":"Add data — cont_add_data","text":"data added elic_cont object, first names standardised converting capital letters lower case, removing whitespaces punctuation. , data anonymised converting names short sha1 hashes. way, sensible information collected elicitation process never reaches elic_cont object. three four points elicitation processes, order values checked expert. min-max-best, values swaped accordingly informative warn raised. data imported Google Sheets, cont_add_data() performs additional data cleaning operations. relevant data collected Google Forms , example, multiple submission expert different decimal separator used. data collected Google Form, column date time recorded. First, function checks multiple submissions present, last submission retained. Second, function removes column timestamp. checks consistency decimal separator, .e. commas , replaced periods .. Finally, columns first one (contains names) forced numeric.","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_add_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add data — cont_add_data","text":"Sergio Vignali","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_add_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add data — cont_add_data","text":"","code":"# Create the elic_cont object for an elicitation process that estimates 3 # variables, the first for a one point estimation of a positive integer, the # second for three points estimation of a negative real, and the last for a # four point estimation of a probability x <- cont_start(var_names = c(\"var1\", \"var2\", \"var3\"),                 var_types = \"ZNp\",                 elic_types = \"134\",                 experts = 6) #> ✔ <elic_cont> object for \"Elicitation\" correctly initialised  # Add data for the first and second round from a data.frame. Notice that the # two commands can be piped my_elicit <- cont_add_data(x, data_source = round_1, round = 1) |>   cont_add_data(data_source = round_2, round = 2) #> ✔ Data added to \"Round 1\" from \"data.frame\" #> ✔ Data added to \"Round 2\" from \"data.frame\" my_elicit #>  #> ── Elicitation ── #>  #> • Variables: \"var1\", \"var2\", and \"var3\" #> • Variable types: \"Z\", \"N\", and \"p\" #> • Elicitation types: \"1p\", \"3p\", and \"4p\" #> • Number of experts: 6 #> • Number of rounds: 2  # Add data for the first and second round from a csv file files <- list.files(path = system.file(\"extdata\", package = \"elicitr\"),                     pattern = \"round_\",                     full.names = TRUE) my_elicit <- cont_add_data(x, data_source = files[1], round = 1) |>   cont_add_data(data_source = files[2], round = 2) #> ✔ Data added to \"Round 1\" from \"csv file\" #> ✔ Data added to \"Round 2\" from \"csv file\" my_elicit #>  #> ── Elicitation ── #>  #> • Variables: \"var1\", \"var2\", and \"var3\" #> • Variable types: \"Z\", \"N\", and \"p\" #> • Elicitation types: \"1p\", \"3p\", and \"4p\" #> • Number of experts: 6 #> • Number of rounds: 2  # Add data for the first and second round from a xlsx file with two sheets file <- list.files(path = system.file(\"extdata\", package = \"elicitr\"),                    pattern = \"rounds\",                    full.names = TRUE) # Using the sheet index my_elicit <- cont_add_data(x, data_source = file, sheet = 1, round = 1) |>   cont_add_data(data_source = file, sheet = 2, round = 2) #> ✔ Data added to \"Round 1\" from \"xlsx file\" #> ✔ Data added to \"Round 2\" from \"xlsx file\" my_elicit #>  #> ── Elicitation ── #>  #> • Variables: \"var1\", \"var2\", and \"var3\" #> • Variable types: \"Z\", \"N\", and \"p\" #> • Elicitation types: \"1p\", \"3p\", and \"4p\" #> • Number of experts: 6 #> • Number of rounds: 2 # Using the sheet name my_elicit <- cont_add_data(x, data_source = file,                            sheet = \"Round 1\", round = 1) |>   cont_add_data(data_source = file, sheet = \"Round 2\", round = 2) #> ✔ Data added to \"Round 1\" from \"xlsx file\" #> ✔ Data added to \"Round 2\" from \"xlsx file\" my_elicit #>  #> ── Elicitation ── #>  #> • Variables: \"var1\", \"var2\", and \"var3\" #> • Variable types: \"Z\", \"N\", and \"p\" #> • Elicitation types: \"1p\", \"3p\", and \"4p\" #> • Number of experts: 6 #> • Number of rounds: 2  if (FALSE) { # interactive() # Add data for the first and second round from Google Sheets googlesheets4::gs4_deauth() gs1 <- \"12lGIPa-jJOh3fogUDaERmkf04pVpPu9i8SloL2jAdqc\" gs2 <- \"1wImcfJYnC9a423jlxZiU_BFKXZpTZ7AIsZSxFtEsBQw\" my_elicit <- cont_add_data(x, data_source = gs1, round = 1) |>   cont_add_data(data_source = gs2, round = 2) my_elicit }"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Elicitation data for continuous variables — cont_data","title":"Elicitation data for continuous variables — cont_data","text":"Simulated data first second round elicitation process estimating three variables three different elicitation types.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elicitation data for continuous variables — cont_data","text":"","code":"round_1  round_2"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Elicitation data for continuous variables — cont_data","text":"data frame 6 rows 9 columns: name Name experts (randomly generated). var1_best Best estimate var1. estimate contains integer numbers referring one point elicitation method. var2_min, var2_max, var2_best Minimum, maximum, best estimates var2. estimates contain positive integer numbers referring three points elicitation method. var3_min, var3_max, var3_best, var3_conf Minimum, maximum, best, confidence estimates var3. estimates contain probabilities referring four points elicitation method. object class tbl_df (inherits tbl, data.frame) 6 rows 9 columns. object class tbl_df (inherits tbl, data.frame) 6 rows 9 columns.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Elicitation data for continuous variables — cont_data","text":"Randomly generated numbers names.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data — cont_get_data","title":"Get data — cont_get_data","text":"cont_get_data() gets data elic_cont object.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data — cont_get_data","text":"","code":"cont_get_data(   x,   round,   ...,   var = \"all\",   var_types = \"all\",   elic_types = \"all\" )"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data — cont_get_data","text":"x object class elic_cont. round integer indicating data belongs first second elicitation round. ... Unused arguments, included future extensions function. var character string name variable character vector variable names want extract data. Use variables. var_types character string short codes indicating variable type. See Variable types . elic_types character string short codes codes indicating elicitation type. Use elicitation types. See Elicitation Types .","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data — cont_get_data","text":"tibble extracted data.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data — cont_get_data","text":"One one optional argument can specified. one provided, first following used: var, var_types, elic_types.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":"variable-types","dir":"Reference","previous_headings":"","what":"Variable types","title":"Get data — cont_get_data","text":"Variable types must provided single string containing short codes, e.g. \"pPN\". Valid short codes : Z: integers, estimate must integer number interval (-Inf, Inf). N: positive integers, estimate must integer number interval (0, Inf). z: negative integers, estimate must integer number interval (-Inf, 0]. R: reals, estimate must real number interval (-Inf, Inf). s: positive reals, estimate must real number interval (0, Inf). r: negative reals, estimate must real number interval (-Inf, ]. p: probability, estimate must real number interval (0, 1).","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":"elicitation-types","dir":"Reference","previous_headings":"","what":"Elicitation types","title":"Get data — cont_get_data","text":"Elicitation types must provided single string containing short codes, e.g. \"134\". Valid short codes : 1: one point elicitation, best estimate provided. 3: three points elicitation, minimum, maximum, best estimates provided. 4: four points elicitation, minimum, maximum, best, confidence estimates provided.","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get data — cont_get_data","text":"Sergio Vignali","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data — cont_get_data","text":"","code":"# Create the elict object and add data for the first and second round from a # data.frame. my_elicit <- cont_start(var_names = c(\"var1\", \"var2\", \"var3\"),                         var_types = \"ZNp\",                         elic_types = \"134\",                         experts = 6) |>   cont_add_data(data_source = round_1, round = 1) |>   cont_add_data(data_source = round_2, round = 2) #> ✔ <elic_cont> object for \"Elicitation\" correctly initialised #> ✔ Data added to \"Round 1\" from \"data.frame\" #> ✔ Data added to \"Round 2\" from \"data.frame\"  # Get all data from round 1 cont_get_data(my_elicit, round = 1) #> # A tibble: 6 × 9 #>   id      var1_best var2_min var2_max var2_best var3_min var3_max var3_best #>   <chr>       <int>    <int>    <int>     <int>    <dbl>    <dbl>     <dbl> #> 1 5ac97e0         1       20       24        22     0.43     0.83      0.73 #> 2 e51202e         0        7       10         9     0.67     0.87      0.77 #> 3 e78cbf4         0       10       15        12     0.65     0.95      0.85 #> 4 9fafbee        -7        4       12         9     0.44     0.84      0.64 #> 5 3cc9c29        -5       13       18        16     0.38     0.88      0.68 #> 6 3d32ab9         3       20       26        25     0.35     0.85      0.65 #> # ℹ 1 more variable: var3_conf <int>  # Get data by variable name---- # Get data for var3 from round 2 cont_get_data(my_elicit, round = 2, var = \"var3\") #> # A tibble: 6 × 5 #>   id      var3_min var3_max var3_best var3_conf #>   <chr>      <dbl>    <dbl>     <dbl>     <int> #> 1 5ac97e0     0.52     0.82      0.72        72 #> 2 e51202e     0.55     0.85      0.75        97 #> 3 e78cbf4     0.62     0.82      0.72        72 #> 4 9fafbee     0.52     0.82      0.72        88 #> 5 3cc9c29     0.58     0.78      0.68        92 #> 6 3d32ab9     0.66     0.86      0.76        80  # Get data for var1 and var2 from round 1 cont_get_data(my_elicit, round = 1, var = c(\"var1\", \"var2\")) #> # A tibble: 6 × 5 #>   id      var1_best var2_min var2_max var2_best #>   <chr>       <int>    <int>    <int>     <int> #> 1 5ac97e0         1       20       24        22 #> 2 e51202e         0        7       10         9 #> 3 e78cbf4         0       10       15        12 #> 4 9fafbee        -7        4       12         9 #> 5 3cc9c29        -5       13       18        16 #> 6 3d32ab9         3       20       26        25  # Get data by variable type---- # Get data for variables containing integer numbers cont_get_data(my_elicit, round = 2, var_types = \"Z\") #> # A tibble: 6 × 2 #>   id      var1_best #>   <chr>       <int> #> 1 5ac97e0         0 #> 2 e51202e        -2 #> 3 e78cbf4        -2 #> 4 9fafbee        -4 #> 5 3cc9c29         1 #> 6 3d32ab9         1 # Get data for variables containing positive integers and probabilities cont_get_data(my_elicit, round = 2, var_types = \"Np\") #> # A tibble: 6 × 8 #>   id      var2_min var2_max var2_best var3_min var3_max var3_best var3_conf #>   <chr>      <int>    <int>     <int>    <dbl>    <dbl>     <dbl>     <int> #> 1 5ac97e0       11       18        15     0.52     0.82      0.72        72 #> 2 e51202e       14       18        15     0.55     0.85      0.75        97 #> 3 e78cbf4       15       21        18     0.62     0.82      0.72        72 #> 4 9fafbee       11       15        12     0.52     0.82      0.72        88 #> 5 3cc9c29       15       20        17     0.58     0.78      0.68        92 #> 6 3d32ab9       18       23        20     0.66     0.86      0.76        80  # Get data by elicitation type---- # Get data for three points estimates cont_get_data(my_elicit, round = 2, elic_types = \"3\") #> # A tibble: 6 × 4 #>   id      var2_min var2_max var2_best #>   <chr>      <int>    <int>     <int> #> 1 5ac97e0       11       18        15 #> 2 e51202e       14       18        15 #> 3 e78cbf4       15       21        18 #> 4 9fafbee       11       15        12 #> 5 3cc9c29       15       20        17 #> 6 3d32ab9       18       23        20 # Get data for one and four points estimates cont_get_data(my_elicit, round = 2, elic_types = \"14\") #> # A tibble: 6 × 6 #>   id      var1_best var3_min var3_max var3_best var3_conf #>   <chr>       <int>    <dbl>    <dbl>     <dbl>     <int> #> 1 5ac97e0         0     0.52     0.82      0.72        72 #> 2 e51202e        -2     0.55     0.85      0.75        97 #> 3 e78cbf4        -2     0.62     0.82      0.72        72 #> 4 9fafbee        -4     0.52     0.82      0.72        88 #> 5 3cc9c29         1     0.58     0.78      0.68        92 #> 6 3d32ab9         1     0.66     0.86      0.76        80"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot elicitation data — cont_plot","title":"Plot elicitation data — cont_plot","text":"cont_plot() plots elicitation data specific round variable.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot elicitation data — cont_plot","text":"","code":"cont_plot(   x,   round,   var,   ...,   scale_conf = 100,   group = FALSE,   truth = NULL,   colour = \"purple\",   group_colour = \"orange\",   truth_colour = \"red\",   point_size = 4,   line_width = 1.5,   title = paste(\"Round\", round),   xlab = var,   ylab = \"Experts\",   family = \"sans\",   theme = NULL,   verbose = TRUE )"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot elicitation data — cont_plot","text":"x object class elic_cont. round integer indicating data belongs first second elicitation round. var character string, variable plotted. ... Unused arguments, included future extensions function. scale_conf numeric, scale factor confidence interval. group logical, whether plot group mean. truth list, true value variable, see Details . colour character string, colour estimated values. group_colour character string, colour group mean. truth_colour character string, colour true value. point_size numeric, size points. line_width numeric, width lines. title character, title plot. xlab character, title x axis. ylab character, title y axis. family character, font family. theme theme function overwrite default theme. verbose logical, TRUE prints informative messages.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot elicitation data — cont_plot","text":"Invisibly ggplot object.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot elicitation data — cont_plot","text":"truth argument useful elicitation process part workshop used demonstration. case true value known can added plot. argument must list following elements: min, max, best, conf. var refers one point elicitation estimate, best element required. var refers  three points elicitation.estimate, min max elements also required. Finally, var refers four points elicitation estimate, conf element also required. conf element used rescale min max values. theme provided, family argument ignored.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_plot.html","id":"scale-conf","dir":"Reference","previous_headings":"","what":"scale_conf","title":"Plot elicitation data — cont_plot","text":"variable plotted result four points elicitation expert confidence provided, minimum maximum values provided expert rescaled using provided confidence categories. Users can choose want rescale minimum maximum values providing value scale_conf argument. argument provided, default value 100 used scale_conf. scaled minimum maximum values obtained : \\(minimum = best\\ guess - (best\\ guess - minimum)\\frac{scale\\_conf} {confidence}\\) \\(maximum = best\\ guess + (maximum - best\\ guess) \\frac{scale\\_conf} {confidence}\\)","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot elicitation data — cont_plot","text":"Sergio Vignali, Maude Vernet Stefano Canessa","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot elicitation data — cont_plot","text":"","code":"# Create the elict object and add data for the first and second round from a # data.frame. my_elicit <- cont_start(var_names = c(\"var1\", \"var2\", \"var3\"),                         var_types = \"ZNp\",                         elic_types = \"134\",                         experts = 6) |>   cont_add_data(x, data_source = round_1, round = 1) |>   cont_add_data(data_source = round_2, round = 2) #> ✔ <elic_cont> object for \"Elicitation\" correctly initialised #> ✔ Data added to \"Round 1\" from \"data.frame\" #> ✔ Data added to \"Round 2\" from \"data.frame\"  # Plot the elicitation data for the first round and the variable var1 (only # the best estimate) cont_plot(my_elicit, round = 1, var = \"var1\")   # Plot the elicitation data for the first round and the variable var2 (best # estimate with min and max errors) cont_plot(my_elicit, round = 1, var = \"var2\")   # Plot the elicitation data for the first round and the variable var3 (best # estimate with min and max errors rescaled to the confidence value) cont_plot(my_elicit, round = 1, var = \"var3\") #> Warning: ! Some values have been constrained to be between 0 and 1. #> ✔ Rescaled min and max   # Add the group mean cont_plot(my_elicit, round = 1, var = \"var3\", group = TRUE) #> Warning: ! Some values have been constrained to be between 0 and 1. #> ✔ Rescaled min and max   # Add the true value cont_plot(my_elicit, round = 1, var = \"var3\",           truth = list(min = 0.6, max = 0.85, best = 0.75, conf = 100)) #> Warning: ! Some values have been constrained to be between 0 and 1. #> ✔ Rescaled min and max   # Overwrite the default theme cont_plot(my_elicit, round = 1, var = \"var3\",           theme = ggplot2::theme_classic()) #> Warning: ! Some values have been constrained to be between 0 and 1. #> ✔ Rescaled min and max"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Start elicitation — cont_start","title":"Start elicitation — cont_start","text":"cont_start() initialises elic_cont object stores important metadata data collected elicitation process continuous variables.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start elicitation — cont_start","text":"","code":"cont_start(   var_names,   var_types,   elic_types,   experts,   ...,   title = \"Elicitation\",   verbose = TRUE )"},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start elicitation — cont_start","text":"var_names character vector name estimated variables. var_types character string short codes indicating variable type. one var_type provided, value recycled variables. See Variable types . elic_types character string short codes indicating elicitation type. one elic_type provided, value recycled variables. See Elicitation Types . experts numeric indicating number experts participating elicitation process. ... Unused arguments, included future extensions function. title character, used bind name object. verbose logical, TRUE prints informative messages.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start elicitation — cont_start","text":"object class elic_cont binding metadata related elicitation process. metadata used functions validate correctness provided data.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":"variable-types","dir":"Reference","previous_headings":"","what":"Variable types","title":"Start elicitation — cont_start","text":"Variable types must provided single string containing short codes, e.g. \"pPN\". Valid short codes : Z: integers, estimate must integer number interval (-Inf, Inf). N: positive integers, estimate must integer number interval (0, Inf). z: negative integers, estimate must integer number interval (-Inf, 0]. R: reals, estimate must real number interval (-Inf, Inf). s: positive reals, estimate must real number interval (0, Inf). r: negative reals, estimate must real number interval (-Inf, ]. p: probability, estimate must real number interval (0, 1).","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":"elicitation-types","dir":"Reference","previous_headings":"","what":"Elicitation types","title":"Start elicitation — cont_start","text":"Elicitation types must provided single string containing short codes, e.g. \"134\". Valid short codes : 1: one point elicitation, best estimate provided. 3: three points elicitation, minimum, maximum, best estimates provided. 4: four points elicitation, minimum, maximum, best, confidence estimates provided.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Start elicitation — cont_start","text":"Hemming, V., Burgman, M. ., Hanea, . M., McBride, M. F., & Wintle, B. C. (2018). practical guide structured expert elicitation using IDEA protocol. Methods Ecology Evolution, 9(1), 169–180. https://doi.org/10.1111/2041-210X.12857","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Start elicitation — cont_start","text":"Sergio Vignali","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/cont_start.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start elicitation — cont_start","text":"","code":"# Create the elic_cont object for an elicitation process that estimates 3 # variables, the first for a one point estimation of a positive integer, the # second for three points estimation of a negative real, and the last for a # four point estimation of a probability my_elicit <- cont_start(var_names = c(\"var1\", \"var2\", \"var3\"),                         var_types = \"Nrp\",                         elic_types = \"134\",                         experts = 4) #> ✔ <elic_cont> object for \"Elicitation\" correctly initialised my_elicit #>  #> ── Elicitation ── #>  #> • Variables: \"var1\", \"var2\", and \"var3\" #> • Variable types: \"N\", \"r\", and \"p\" #> • Elicitation types: \"1p\", \"3p\", and \"4p\" #> • Number of experts: 4 #> • Number of rounds: 0  # A title can be added to bind a name to the object: my_elicit <- cont_start(var_names = c(\"var1\", \"var2\", \"var3\"),                         var_types = \"Nrp\",                         elic_types = \"134\",                         experts = 4,                         title = \"My elicitation\") #> ✔ <elic_cont> object for \"My elicitation\" correctly initialised my_elicit #>  #> ── My elicitation ── #>  #> • Variables: \"var1\", \"var2\", and \"var3\" #> • Variable types: \"N\", \"r\", and \"p\" #> • Elicitation types: \"1p\", \"3p\", and \"4p\" #> • Number of experts: 4 #> • Number of rounds: 0 # Notice that if var_types and elic_types are provided as single character, # their value is recycled and applied to all variables. In the following # example all three variables will be considered for a four point estimation # to estimate a probability: my_elicit <- cont_start(var_names = c(\"var1\", \"var2\", \"var3\"),                         var_types = \"p\",                         elic_types = \"4\",                         experts = 4) #> ✔ <elic_cont> object for \"Elicitation\" correctly initialised my_elicit #>  #> ── Elicitation ── #>  #> • Variables: \"var1\", \"var2\", and \"var3\" #> • Variable type: \"p\" #> • Elicitation type: \"4p\" #> • Number of experts: 4 #> • Number of rounds: 0"},{"path":"https://crewdecisions.github.io/elicitr/reference/elic_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"elic_cat class — elic_cat","title":"elic_cat class — elic_cat","text":"elic_cat class container elicitation data. used store data collected elicitation process metadata.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/elic_cat.html","id":"object-elements","dir":"Reference","previous_headings":"","what":"Object elements","title":"elic_cat class — elic_cat","text":"6 elements elic_cat object: categories: character vector names categories. options: character vector names options investigated. experts: numeric, indicating maximum number experts participating elicitation process one topic. topics: character vector names topics investigated. data: list data collected elicitation process. list multiple elements, corresponding topics investigated. Moreover, object title attribute binds name object.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/elic_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"elic_cont class — elic_cont","title":"elic_cont class — elic_cont","text":"elic_cont class container elicitation data. used store data collected elicitation process matadata.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/elic_cont.html","id":"object-elements","dir":"Reference","previous_headings":"","what":"Object elements","title":"elic_cont class — elic_cont","text":"5 elements elic_cont object: var_names: character vector name estimated variables. var_types: character string short codes indicating variable type. elic_types: character string short codes indicating elicitation type. experts: numeric indicating number experts participating elicitation process. data: list data collected elicitation process. list two elements, round_1 round_2, store data collected first second round elicitation process, respectively. Moreover, object title attribute binds name object.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/elicitr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"elicitr: A user friendly interface to aggregate elicitation data — elicitr-package","title":"elicitr: A user friendly interface to aggregate elicitation data — elicitr-package","text":"Elicitr R package, used aggregate elicitation data. package active development implement functions based two formal elicitation methods. provide data, elicitr transforms easily readable graphics.","code":""},{"path":[]},{"path":"https://crewdecisions.github.io/elicitr/reference/elicitr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"elicitr: A user friendly interface to aggregate elicitation data — elicitr-package","text":"Maintainer: Sergio Vignali crewdecisions@gmail.com (ORCID) Authors: Maude Vernet (ORCID) Stefano Canessa (ORCID) contributors: University Bern [funder]","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/plot.cat_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot categorical samples — plot.cat_sample","title":"Plot categorical samples — plot.cat_sample","text":"plot() aggregates plots categorical samples violin plot.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/plot.cat_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot categorical samples — plot.cat_sample","text":"","code":"# S3 method for class 'cat_sample' plot(   x,   ...,   option = \"all\",   title = NULL,   ylab = \"Probabolity\",   colours = NULL,   family = \"sans\",   theme = NULL )"},{"path":"https://crewdecisions.github.io/elicitr/reference/plot.cat_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot categorical samples — plot.cat_sample","text":"x object class cat_sample created function cat_sample_data. ... Unused arguments, included future extensions function. option character string name option character vector options want extract data. Use options. title character string title plot. NULL, title topic name. ylab character string label y-axis. colours vector colours use categories. family character string font family use plot. theme theme function overwrite default theme.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/plot.cat_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot categorical samples — plot.cat_sample","text":"Invisibly ggplot object.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/plot.cat_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot categorical samples — plot.cat_sample","text":"theme provided, family argument ignored.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/plot.cat_sample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot categorical samples — plot.cat_sample","text":"Sergio Vignali Maude Vernet","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/plot.cat_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot categorical samples — plot.cat_sample","text":"","code":"# Create the elic_cat object for an elicitation process with three topics, # four options, five categories and a maximum of six experts per topic my_categories <- c(\"category_1\", \"category_2\", \"category_3\",                    \"category_4\", \"category_5\") my_options <- c(\"option_1\", \"option_2\", \"option_3\", \"option_4\") my_topics <- c(\"topic_1\", \"topic_2\", \"topic_3\") my_elicit <- cat_start(categories = my_categories,                        options = my_options,                        experts = 6,                        topics = my_topics) |>   cat_add_data(data_source = topic_1, topic = \"topic_1\") |>   cat_add_data(data_source = topic_2, topic = \"topic_2\") |>   cat_add_data(data_source = topic_3, topic = \"topic_3\") #> ✔ <elic_cat> object for \"Elicitation\" correctly initialised #> ✔ Data added to Topic \"topic_1\" from \"data.frame\" #> ✔ Data added to Topic \"topic_2\" from \"data.frame\" #> ✔ Data added to Topic \"topic_3\" from \"data.frame\"  # Sample data from Topic 1 for all options using the basic method samp <- cat_sample_data(my_elicit,                         method = \"basic\",                         topic = \"topic_1\") #> ✔ Data sampled successfully using \"basic\" method.  # Plot the sampled data for all options plot(samp)   # Plot the sampled data for option 1 plot(samp, option = \"option_1\")   # Plot the sampled data for option 1 and 3 plot(samp, option = c(\"option_1\", \"option_3\"))   # Provide custom colours plot(samp, colours = c(\"steelblue4\", \"darkcyan\", \"chocolate1\",                        \"chocolate3\", \"orangered4\"))   # Overwrite the default theme plot(samp, theme = ggplot2::theme_minimal())"},{"path":"https://crewdecisions.github.io/elicitr/reference/summary.cat_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise categorical sample — summary.cat_sample","title":"Summarise categorical sample — summary.cat_sample","text":"summary() summarises sampled data provides minimum, first quartile, median, mean, third quartile, maximum values category.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/summary.cat_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise categorical sample — summary.cat_sample","text":"","code":"# S3 method for class 'cat_sample' summary(object, option, ...)"},{"path":"https://crewdecisions.github.io/elicitr/reference/summary.cat_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise categorical sample — summary.cat_sample","text":"object object class cat_sample created function cat_sample_data. option character string name option. ... Unused arguments, included future extensions function.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/summary.cat_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise categorical sample — summary.cat_sample","text":"tibble summary statistics.","code":""},{"path":"https://crewdecisions.github.io/elicitr/reference/summary.cat_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise categorical sample — summary.cat_sample","text":"","code":"# Create the elic_cat object for an elicitation process with three topics, # four options, five categories and a maximum of six experts per topic my_categories <- c(\"category_1\", \"category_2\", \"category_3\",                    \"category_4\", \"category_5\") my_options <- c(\"option_1\", \"option_2\", \"option_3\", \"option_4\") my_topics <- c(\"topic_1\", \"topic_2\", \"topic_3\") my_elicit <- cat_start(categories = my_categories,                        options = my_options,                        experts = 6,                        topics = my_topics) |>   cat_add_data(data_source = topic_1, topic = \"topic_1\") |>   cat_add_data(data_source = topic_2, topic = \"topic_2\") |>   cat_add_data(data_source = topic_3, topic = \"topic_3\") #> ✔ <elic_cat> object for \"Elicitation\" correctly initialised #> ✔ Data added to Topic \"topic_1\" from \"data.frame\" #> ✔ Data added to Topic \"topic_2\" from \"data.frame\" #> ✔ Data added to Topic \"topic_3\" from \"data.frame\"  # Sample data from Topic 1 for all options using the basic method samp <- cat_sample_data(my_elicit,                         method = \"basic\",                         topic = \"topic_1\") #> ✔ Data sampled successfully using \"basic\" method.  # Summarise the sampled data summary(samp, option = \"option_1\") #> # A tibble: 5 × 7 #>   Category         Min       Q1   Median   Mean       Q3   Max #>   <chr>          <dbl>    <dbl>    <dbl>  <dbl>    <dbl> <dbl> #> 1 category_1 2.10e- 27 4.03e- 6 2.87e- 3 0.108  0.0827   0.998 #> 2 category_2 0         1.39e-71 1.09e-17 0.0633 0.000513 1.00  #> 3 category_3 2.88e- 24 2.78e- 3 1.67e- 1 0.382  0.816    1     #> 4 category_4 2.11e-219 1.21e-25 3.76e- 4 0.139  0.149    0.999 #> 5 category_5 1.99e- 54 9.17e- 5 9.92e- 2 0.308  0.626    1.00"}]
