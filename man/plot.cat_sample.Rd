% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_cat_sample.R
\name{plot.cat_sample}
\alias{plot.cat_sample}
\title{Plot categorical samples}
\usage{
\method{plot}{cat_sample}(
  x,
  ...,
  option = "all",
  title = NULL,
  ylab = "Probabolity",
  colours = NULL,
  family = "sans",
  theme = NULL
)
}
\arguments{
\item{x}{an object of class \code{cat_sample} created by the function
\link{cat_sample_data}.}

\item{...}{Unused arguments, included only for future extensions of the
function.}

\item{option}{character string with the name of the option or character
vector with the options that you want to extract from the data. Use \code{all} for
all options.}

\item{title}{character string with the title of the plot. If \code{NULL}, the
title will be the topic name.}

\item{ylab}{character string with the label of the y-axis.}

\item{colours}{vector of colours to use for the categories.}

\item{family}{character string with the font family to use in the plot.}

\item{theme}{a \code{\link[ggplot2:theme]{theme}} function to overwrite the default
theme.}
}
\value{
Invisibly a \code{\link[ggplot2:ggplot]{ggplot}} object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\code{plot()} aggregates and plots the categorical samples as violin plot.
}
\details{
If a \code{theme} is provided, the \code{family} argument is ignored.
}
\examples{
# Create the elic_cat object for an elicitation process with three topics,
# four options, five categories and a maximum of six experts per topic
my_categories <- c("category_1", "category_2", "category_3",
                   "category_4", "category_5")
my_options <- c("option_1", "option_2", "option_3", "option_4")
my_topics <- c("topic_1", "topic_2", "topic_3")
my_elicit <- cat_start(categories = my_categories,
                       options = my_options,
                       experts = 6,
                       topics = my_topics) |>
  cat_add_data(data_source = topic_1, topic = "topic_1") |>
  cat_add_data(data_source = topic_2, topic = "topic_2") |>
  cat_add_data(data_source = topic_3, topic = "topic_3")

# Sample data from Topic 1 for all options using the basic method
samp <- cat_sample_data(my_elicit,
                        method = "basic",
                        topic = "topic_1")

# Plot the sampled data for all options
plot(samp)

# Plot the sampled data for option 1
plot(samp, option = "option_1")

# Plot the sampled data for option 1 and 3
plot(samp, option = c("option_1", "option_3"))

# Provide custom colours
plot(samp, colours = c("steelblue4", "darkcyan", "chocolate1",
                       "chocolate3", "orangered4"))

# Overwrite the default theme
plot(samp, theme = ggplot2::theme_minimal())
}
\seealso{
Other plot helpers: 
\code{\link{plot.cont_sample}()},
\code{\link{plot.elic_cont}()}
}
\author{
Sergio Vignali and Maude Vernet
}
\concept{plot helpers}
